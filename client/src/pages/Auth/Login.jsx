import { useNavigate } from "react-router-dom";
import { signInWithPopup } from "firebase/auth";
// ‚ùå S·ª≠a l·ªói import alias sang ƒë∆∞·ªùng d·∫´n t∆∞∆°ng ƒë·ªëi (Relative Paths)
import { auth, googleProvider } from "../firebase/firebaseConfig"; 
import FooterBar from "../components/shared/FooterBar";
import GoogleButton from "../components/shared/GoogleButton";
import MessageButton from "../components/shared/MessageButton";
import PhoneButton from "../components/shared/PhoneButton";
import SubmitButton from "../components/shared/SubmitButton";
import MiniLogo from "../components/shared/MiniLogo";
import BurgerBG from "../components/shared/BurgerBG";
import { pxW, pxH } from "../utils/scale.js";
import "../App.css"; // ‚ùå S·ª≠a l·ªói import CSS

const Login = () => {
  const navigate = useNavigate();

  // ‚ö°Ô∏è GI·ªÆ NGUY√äN LOGIC ƒêƒÇNG NH·∫¨P GOOGLE
  const handleGoogleLogin = async () => {
    try {
      // üîπ M·ªü popup ƒëƒÉng nh·∫≠p Google
      const result = await signInWithPopup(auth, googleProvider);
      const user = result.user;
      console.log("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng:", user);

      // üîπ L·∫•y ID token t·ª´ Firebase
      const idToken = await user.getIdToken();

      // üîπ G·ª≠i token ƒë√≥ l√™n backend
      const res = await fetch("http://localhost:5000/api/auth/google", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ token: idToken }),
        credentials: "include", // ‚ö° ƒë·ªÉ g·ª≠i cookie session
      });

      // üîπ X·ª≠ l√Ω l·ªói theo status code
      if (res.status === 404) {
        // Gmail ch∆∞a t·ªìn t·∫°i trong DB
        console.warn("‚ö†Ô∏è T√†i kho·∫£n Google ch∆∞a t·ªìn t·∫°i trong h·ªá th·ªëng");
        // S·ª¨ D·ª§NG CUSTOM MODAL THAY CHO alert()
        console.error("T√†i kho·∫£n Google n√†y ch∆∞a t·ªìn t·∫°i. Vui l√≤ng ƒëƒÉng k√Ω tr∆∞·ªõc!");
        // B·∫°n c·∫ßn t·ª± implement logic hi·ªÉn th·ªã th√¥ng b√°o thay cho alert
        return; // d·ª´ng l·∫°i, kh√¥ng ti·∫øp t·ª•c navigate
      }

      if (!res.ok) {
        // C√°c l·ªói kh√°c (500, 401, v.v.)
        const errData = await res.json().catch(() => ({}));
        throw new Error(errData.message || "‚ùå L·ªói server khi x√°c minh token");
      }

      // üîπ N·∫øu ok ‚Üí l·∫•y d·ªØ li·ªáu tr·∫£ v·ªÅ
      const data = await res.json();
      console.log("‚úÖ Server tr·∫£ v·ªÅ:", data);

      // üîπ L∆∞u user v√† token
      // L∆ØU √ù: Trong m√¥i tr∆∞·ªùng th·ª±c t·∫ø, n√™n d√πng state management v√† HTTP-only cookies
      localStorage.setItem("user", JSON.stringify(data.user));
      if (data.token) localStorage.setItem("token", data.token);

      // üîπ ƒêi·ªÅu h∆∞·ªõng t·ªõi trang ch√≠nh
      navigate("/customer/home");
    } catch (error) {
      console.error("‚ùå L·ªói ƒëƒÉng nh·∫≠p Google:", error);
      // S·ª¨ D·ª§NG CUSTOM MODAL THAY CHO alert()
      console.error(error.message || "ƒêƒÉng nh·∫≠p Google th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i!");
      // B·∫°n c·∫ßn t·ª± implement logic hi·ªÉn th·ªã th√¥ng b√°o thay cho alert
    }
  };

  // ‚ö°Ô∏è GI·ªÆ NGUY√äN GIAO DI·ªÜN V√Ä V·ªä TR√ç C·ª¶A B·∫†N (v·ªõi c√°c gi√° tr·ªã pxW, pxH v√† vh/vw)
  return (
    <div
      style={{
        position: "fixed",
        top: 0,
        left: 0,
        width: "100%", // ƒê√£ s·ª≠a ƒë·ªÉ responsive h∆°n
        height: "100%", // ƒê√£ s·ª≠a ƒë·ªÉ responsive h∆°n
        background: "#fff",
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "space-between",
        overflow: "hidden",
      }}
    >
      {/* Logo */}
      <div
        style={{
          position: "absolute",
          top: "2.82vh", // Gi·ªØ nguy√™n v·ªã tr√≠ theo vh/vw
          left: "50%",
          transform: "translateX(-50%)",
          zIndex: 10,
        }}
      >
        <MiniLogo></MiniLogo>
      </div>

      {/* Burger Background */}
      <div
        style={{
          position: "absolute",
          top: "17.12vh", // Gi·ªØ nguy√™n v·ªã tr√≠ theo vh/vw
          left: "50%",
          transform: "translateX(-50%)",
          zIndex: 5,
        }}
      >
        <BurgerBG></BurgerBG>
      </div>

      {/* Submit Button */}
      <div
        style={{
          position: "absolute",
          top: "65.75vh", // Gi·ªØ nguy√™n v·ªã tr√≠ theo vh/vw
          left: "50%",
          transform: "translateX(-50%)",
          zIndex: 10,
        }}
      >
        {/* GI·ªÆ NGUY√äN LOGIC navigate */}
        <SubmitButton onClick={() => navigate("/customer/home")}>
          Ti·∫øp t·ª•c v·ªõi t∆∞ c√°ch l√† kh√°ch
        </SubmitButton>
      </div>

      {/* Or Text */}
      <div
        style={{
          position: "absolute",
          top: "75vh", // Gi·ªØ nguy√™n v·ªã tr√≠ theo vh/vw
          left: "50%",
          transform: "translateX(-50%)",
          zIndex: 10,
          justifyContent: "center",
          color: "#70756B",
          fontSize: "1.5rem",
          fontWeight: "600",
          wordWrap: "break-word",
          display: "flex",
          flexDirection: "column",
        }}
      >
        ho·∫∑c
      </div>

      {/* Button Group */}
      <div
        style={{
          position: "absolute",
          top: "80.125vh", // Gi·ªØ nguy√™n v·ªã tr√≠ theo vh/vw
          left: 0,
          right: 0,
          zIndex: 10,
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          paddingLeft: "5.27vw",
          paddingRight: "5.27vw",
        }}
      >
        {/* Google Login Button (GI·ªÆ NGUY√äN LOGIC) */}
        <div>
          <GoogleButton onClick={handleGoogleLogin} />
        </div>

        {/* Phone Button (GI·ªÆ NGUY√äN LOGIC navigate) */}
        <div>
          <PhoneButton onClick={() => navigate("/login/phone")} />
        </div>

        {/* Message Button (GI·ªÆ NGUY√äN LOGIC navigate) */}
        <div>
          <MessageButton onClick={() => navigate("/login/email")} />
        </div>
      </div>

      {/* Footer (GI·ªÆ NGUY√äN LOGIC navigate) */}
      <FooterBar onClick={() => navigate("/register")} />
    </div>
  );
};

export default Login;
