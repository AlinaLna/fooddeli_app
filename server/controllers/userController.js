// server/controllers/userController.js
const userService = require("../services/userService");

// üìå L·∫•y th√¥ng tin user theo ID
const getUserById = async (req, res) => {
  try {
    const userId = req.params.id || 4; // m·∫∑c ƒë·ªãnh l√† 4 n·∫øu kh√¥ng truy·ªÅn
    const user = await userService.getUserById(userId);

    if (!user) {
      return res.status(404).json({ message: "‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!" });
    }

    res.status(200).json(user);
  } catch (error) {
    console.error("‚ö†Ô∏è L·ªói getUserById:", error);
    res.status(500).json({ message: "L·ªói server khi l·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng." });
  }
};
const getAllUsers = async (req, res) => {
  try {
    const users = await userService.getAllUsers();
    res.status(200).json(users);
  } catch (error) {
    console.error("‚ö†Ô∏è L·ªói getAllUsers:", error);
    res.status(500).json({ message: "L·ªói server khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng." });
  }
};
// üìå C·∫≠p nh·∫≠t th√¥ng tin user
const updateUser = async (req, res) => {
  try {
    const userId = req.params.id || 4;
    const updateData = req.body;

    const updatedUser = await userService.updateUser(userId, updateData);

    if (!updatedUser) {
      return res.status(404).json({ message: "‚ùå Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t - Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i!" });
    }

    res.status(200).json({
      message: "‚úÖ C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!",
      user: updatedUser,
    });
  } catch (error) {
    console.error("‚ö†Ô∏è L·ªói updateUser:", error);
    res.status(500).json({ message: "L·ªói server khi c·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng." });
  }
};

const deleteUser = async (req, res) => {
  try {
    const userId = req.params.id;
    const deletedUser = await userService.deleteUser(userId);

    if (!deletedUser) {
      return res.status(404).json({ message: "‚ùå Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i!" });
    }

    res.status(200).json({
      message: "‚úÖ ƒê√£ x√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng!",
      user: deletedUser,
    });
  } catch (error) {
    console.error("‚ö†Ô∏è L·ªói deleteUser:", error);
    res.status(500).json({ message: "L·ªói server khi x√≥a ng∆∞·ªùi d√πng." });
  }
};

/**
 * üîê Kh√≥a t√†i kho·∫£n ng∆∞·ªùi d√πng
 */
const lockUserAccount = async (req, res) => {
  try {
    const userId = req.params.id;
    const lockedUser = await userService.lockUserAccount(userId);

    res.status(200).json({
      message: "üîê T√†i kho·∫£n ƒë√£ b·ªã kh√≥a th√†nh c√¥ng!",
      user: lockedUser,
    });
  } catch (error) {
    console.error("‚ö†Ô∏è L·ªói lockUserAccount:", error);
    res.status(400).json({ message: error.message });
  }
};

/**
 * üîç T√¨m ng∆∞·ªùi d√πng theo username
 */
const getUserByUsername = async (req, res) => {
  try {
    const { username } = req.params;
    const user = await userService.getUserByUsername(username);

    if (!user) {
      return res.status(404).json({ message: "‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng v·ªõi username n√†y!" });
    }

    res.status(200).json(user);
  } catch (error) {
    console.error("‚ö†Ô∏è L·ªói getUserByUsername:", error);
    res.status(500).json({ message: "L·ªói server khi t√¨m ng∆∞·ªùi d√πng theo username." });
  }
};

/**
 * üîç T√¨m ng∆∞·ªùi d√πng theo email
 */
const getUserByEmail = async (req, res) => {
  try {
    const { email } = req.params;
    const user = await userService.getUserByEmail(email);

    if (!user) {
      return res.status(404).json({ message: "‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng v·ªõi email n√†y!" });
    }

    res.status(200).json(user);
  } catch (error) {
    console.error("‚ö†Ô∏è L·ªói getUserByEmail:", error);
    res.status(500).json({ message: "L·ªói server khi t√¨m ng∆∞·ªùi d√πng theo email." });
  }
};

/**
 * üîç T√¨m ng∆∞·ªùi d√πng theo s·ªë ƒëi·ªán tho·∫°i
 */
const getUserByPhone = async (req, res) => {
  try {
    const { phone } = req.params;
    const user = await userService.getUserByPhone(phone);

    if (!user) {
      return res.status(404).json({ message: "‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng v·ªõi s·ªë ƒëi·ªán tho·∫°i n√†y!" });
    }

    res.status(200).json(user);
  } catch (error) {
    console.error("‚ö†Ô∏è L·ªói getUserByPhone:", error);
    res.status(500).json({ message: "L·ªói server khi t√¨m ng∆∞·ªùi d√πng theo s·ªë ƒëi·ªán tho·∫°i." });
  }
};

module.exports = {
  createUser,
  getAllUsers,
  getUserById,
  updateUser,
  deleteUser,
  lockUserAccount,
  getUserByUsername,
  getUserByEmail,
  getUserByPhone,
};
